Проекты разработаны по следующему техническому заданию:
------------------------------------------------------
Нужно сделать SQL-базу и REST-API backend. API должно быть реализовано на
ASP.NET Core. Данные - в PostgreSQL. Также нужно добавить консольное
приложение-клиент, в котором можно будет прописывать команды и играть в
камень-ножницы-бумага. Связь между сервером и клиентом организовать через gRPC,
формат обмена данными на ваш выбор.
В базе должны присутствовать следующие сущности
User
MatchHistory
GameTransactions

Подумать о том, какие поля могут быть у каждой сущности и какие связи должны быть
между ними. Какие индексы должны быть на таблицах, чтобы запросы работали
быстро

У API необходимо реализовать следующие методы:
Проведение обычной денежной транзакции между двумя игроками(один передает
деньги другому)
Создание матча с определенной ставкой
Подумать, какие URI должны быть у этих двух методов, каким типом http запроса
канонично к ним обратиться

API и скрипт создания базы на SQL опубликовать в открытом репозитории на
github.com или любом аналогичном хостинге кода
У клиента должны быть следующие команды:
Просмотр баланса
Получение списка игр, их ставок и находится ли в ней ожидающий игрок или нет
Подключение к игре по ее Id

После подключения к игре оба игрока должны отправить К, Н или Б. После того как оба
игрока это сделают, сервер должен вернуть результаты матча и сохранить игру и
транзакции в базе данных
------------------------------------------------------

Основные моменты для тестирования:

GameService.sql 
Находтся в папке проекта GameService

ConnectionString
Находится в файле appsettings.json

WebApi
Пример запроса транзакции
POST
https://localhost:8080/api/v1/transactions?bet=5000&payeeid=1&senderid=3

Пример создания матча со ставкой
POST
https://localhost:8080/api/v1/games?bet=440 